@{
    ViewData["Title"] = "Home Page";
}

@section Scripts
{ 
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>

<script type="text/javascript">

    $(document).ready(() => {
        //.configureLogging(signalR.LogLevel.Debug) ihtiyaç olduğunda hataları görmek için bakarız.
        var connection = new signalR.HubConnectionBuilder().withAutomaticReconnect([1000, 1000, 1000, 1000]).withUrl("https://localhost:44301/MyHub").build();
        statusShow();
        Start();
        
        //Functions
        function statusShow() {
            $("#conStatus").text(connection.connectionState);
        }

        function Start() {
            connection.start().then(() => {
                statusShow();
                $("#loading").hide();

               // connection.invoke("GetNames");

                connection.invoke("GetNamesbyGroup");

            }).catch((err) => {
                console.log(err);
                setTimeout(() => Start(),2000)
            });

        }


        statusShow();

        //Subscribes
        connection.onreconnecting(err => {

            $("#loading").show();
            statusShow();
            


        });

        connection.onreconnected(connectionId => {

            $("#loading").hide();
            statusShow();
            console.log("connectionId" + connectionId);


        });

        connection.onclose(() => {

            $("#loading").hide();
            statusShow();
            Start();
        });

        connection.on("ReceiveClientCount", (clientCount) => {

            $("#clientCount").text(clientCount);
        });

        connection.on("Notify", (countText) => {

            $("#notify").html(`<div class="alert alert-success">${countText}  </div>`)

        });

        connection.on("Error", (errorText) => {

            alert(errorText);
        });

        connection.on("ReceiveNames", (names) => {

            $("#namesList").empty();

            names.forEach((item, index) => {
                $("#namesList").append(`<li class="list-group-item">${item}</li>`)
            });

        });

        connection.on("ReceiveName", (name) => {

            $("#namesList").append(`<li class="list-group-item"> ${name} </li>`)

        });

        connection.on("ReceiveMessageByGroup", (name, teamId) => {

            let listName;

            if (teamId == 1) {

                listName = "ATeamList"

            }
            else
                listName = "BTeamList"

            $(`#${listName}`).append(`<li class="list-group-item"> ${name} </li>`)

        });

        connection.on("ReceiveNamesByGroup", (teams) => {

            teams.forEach((team, index) => {


                let listName;

                if (team.teamId == 1) {

                    listName = "ATeamList"

                }
                else
                    listName = "BTeamList"

                team.users.forEach((user, index2) => {

                    $(`#${listName}`).append(`<li class="list-group-item"> ${user.name} </li>`)

                })



            })
        })







        ///Clicks
        $("#btnNameSave").click(() => {

            connection.invoke("SendName", $("#txtName").val()).catch((err) =>
                console.log(err))

        })

        $("#btnNameTeam").click(() => {

            let name = $("#txtName").val();

            let teamName = $("input[type = radio]:checked").val();

            connection.invoke("SendNameByGroup", name, teamName).catch((err) => {
                console.log(err);
            })

        })

        $("input[type=radio]").change(() => {

            let value = $(`input[type=radio]:checked`).val();

            if (value == "Team A") {

                connection.invoke("AddToGroup", value);

                connection.invoke("RemoveToGroup", "Team B");

            }
            else {

                connection.invoke("AddToGroup", value);

                connection.invoke("RemoveToGroup", "Team A");
            }

        })

    })

    
    


</script>

<div class="row">

    <div class="col-md-8 offset-2">
        <input class="form-control" type="text" id="txtName" />
        <hr />

        <button class="btn btn-primary" id="btnNameSave">İsim Kaydet</button>
        <button class="btn btn-warning" id="btnNameTeam">İsim Kaydet(Takım)</button>
        <div class="alert alert-info mt-2">
            <div class="float-left">
                Bağlantı Durumu:<strong id="conStatus"></strong>
                ,Client Sayısı:<strong id="clientCount"></strong>
            </div>

            <div class="float-right">
                <div id="loading" class="spinner-border" role="status">
                    <span class="visually-hidden"></span>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>

        <div id="notify"></div>

    </div>
</div>

<div class="row">

    <div class="col-md-8 offset-md-2">

        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="TeamGroup" value="Team A" />
            <label class="form-check-inline">A Takımı</label>
        </div>

        <div class="form-check form-check-inline">
            <input class="form-check-input" type="radio" name="TeamGroup" value="Team B" />
            <label class="form-check-inline">B Takımı</label>
        </div>
    </div>


    <div class="col-md-8 offset-2">
        <div class="row">
            <div class="col-md-6">

                <ul id="ATeamList" class="list-group"></ul>

            </div>
            <div class="col-md-6">

                <ul id="BTeamList" class="list-group"></ul>

            </div>

        </div>


       

    </div>


</div>

}